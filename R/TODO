strtoi issue
It seems strtoi in NetBSD  and R became inconsistent.
FreeBSD does not have strtoi defined yet.


gcc -I../../src/extra  -I. -I../../src/include -I../../src/include -I/usr/pkg/include -I/usr/pkg/include -I/usr/include -I/usr/pkg/include/glib-2.0 -I/usr/pkg/include/gio-unix-2.0 -I/usr/pkg/lib/glib-2.0/include -I/usr/X11R7/include -I/usr/pkg/include/freetype2 -I/usr/pkg/include/harfbuzz -I/usr/include/krb5 -I../../src/nmath -DHAVE_CONFIG_H   -fopenmp -fpic  -O2 -pthread -I/usr/pkg/include -I/usr/include -I/usr/pkg/include/glib-2.0 -I/usr/pkg/include/gio-unix-2.0 -I/usr/pkg/lib/glib-2.0/include -I/usr/X11R7/include -I/usr/pkg/include/freetype2 -I/usr/pkg/include/harfbuzz -I/usr/include/krb5  -c character.c -o character.o
character.c:1752:12: error: conflicting types for 'strtoi'
 1752 | static int strtoi(SEXP s, int base)
      |            ^~~~~~
In file included from ../../src/include/Defn.h:907,
                 from character.c:85:
/usr/include/inttypes.h:81:10: note: previous declaration of 'strtoi' was here
   81 | intmax_t strtoi(const char * __restrict, char ** __restrict, int,
      |          ^~~~~~


For the test, 
if the NetBSD definition of following changed (which can not be
done anyway), R-4.3.2 is packaged fine

--- /usr/include/inttypes.h.orig	2023-10-06 23:48:08.000000000 +0900
+++ /usr/include/inttypes.h	2024-01-05 10:28:39.954745456 +0900
@@ -78,8 +78,10 @@
 
 
 #if defined(_NETBSD_SOURCE)
+/*
 intmax_t	strtoi(const char * __restrict, char ** __restrict, int,
 	               intmax_t, intmax_t, int *);
+*/
 uintmax_t	strtou(const char * __restrict, char ** __restrict, int,
 	               uintmax_t, uintmax_t, int *);
 

Shall we rename strtoi in R to strtoiR  for the moment ?


h97@makoto 11:10:52/240105(..wip/R)% (cd /tmp/wip/R/work/R-4.3.2/; find .  -exec grep strtoi '{}' /dev/null \;)
./tests/reg-tests-1d.R:## strtoi("") :
./tests/reg-tests-1d.R:stopifnot(is.na(strtoi("")),
./tests/reg-tests-1d.R:          is.na(strtoi("", 2L)))
./doc/NEWS.3:    • strtoi("", base) now gives NA on all platforms, following its
./doc/html/NEWS.2.html:<li><p> New function <code>strtoi()</code>, a wrapper for the C function
./doc/html/NEWS.3.html:<li> <p><code>strtoi("", base)</code> now gives <code>NA</code> on all platforms,
./doc/NEWS.2:    • New function strtoi(), a wrapper for the C function strtol.
./doc/NEWS.3.Rd:      \item \code{strtoi("", base)} now gives \code{NA} on all platforms,
./doc/NEWS.2.Rd:      \item New function \code{strtoi()}, a wrapper for the C function
./src/include/Internal.h:SEXP do_strtoi(SEXP,SEXP,SEXP,SEXP);
./src/library/base/man/hexmode.Rd:  converting integers to hex, \code{\link{strtoi}} to convert hex
./src/library/base/man/octmode.Rd:  converting integers to octal, \code{\link{strtoi}} to convert octal
./src/library/base/man/strtoi.Rd:% File src/library/base/man/strtoi.Rd
./src/library/base/man/strtoi.Rd:\name{strtoi}
./src/library/base/man/strtoi.Rd:\alias{strtoi}
./src/library/base/man/strtoi.Rd:\usage{strtoi(x, base = 0L)}
./src/library/base/man/strtoi.Rd:strtoi(c("0xff", "077", "123"))
./src/library/base/man/strtoi.Rd:strtoi(c("ffff", "FFFF"), 16L)
./src/library/base/man/strtoi.Rd:strtoi(c("177", "377"), 8L)
./src/library/base/R/octhex.R:        z <- strtoi(x, 8L)
./src/library/base/R/octhex.R:        z <- strtoi(x, 16L)
./src/library/base/R/version.R:        strtoi(substring(elt, first, last), 8L)
./src/library/base/R/character.R:strtoi <-
./src/library/base/R/character.R:    .Internal(strtoi(as.character(x), as.integer(base)))
./src/gnuwin32/Rdll.hide: do_strtoi
./src/main/names.c:{"strtoi",   do_strtoi,      0,      11,     2,      {PP_FUNCALL, PREC_FN,   0}},
./src/main/character.c.orig:static int strtoi(SEXP s, int base)
./src/main/character.c.orig:attribute_hidden SEXP do_strtoi(SEXP call, SEXP op, SEXP args, SEXP env)
./src/main/character.c.orig:    INTEGER(ans)[i] = strtoi(STRING_ELT(x, i), base);
./src/main/character.c:static int strtoi(SEXP s, int base)
./src/main/character.c:attribute_hidden SEXP do_strtoi(SEXP call, SEXP op, SEXP args, SEXP env)
./src/main/character.c: INTEGER(ans)[i] = strtoi(STRING_ELT(x, i), base);
h97@makoto 11:11:02/240105(..wip/R)% 



h97@makoto 12:19:10/240105(..wip/R)%  (cd /tmp/wip/R/work/R-4.3.2/; grep -lr strtoi  .)                         
./tests/reg-tests-1d.R
./doc/NEWS.3
./doc/html/NEWS.2.html
./doc/html/NEWS.3.html
./doc/NEWS.2
./doc/NEWS.3.Rd
./doc/NEWS.2.Rd
./src/include/Internal.h
./src/library/base/man/hexmode.Rd
./src/library/base/man/octmode.Rd
./src/library/base/man/strtoi.Rd
./src/library/base/R/octhex.R
./src/library/base/R/version.R
./src/library/base/R/character.R
./src/gnuwin32/Rdll.hide
./src/main/names.c
./src/main/character.c.orig
./src/main/character.c

But this way ask all of R application/plug-in's to rename strtoi to strtoiR
