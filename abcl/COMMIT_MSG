lang/abcl: update to 1.9.2

Prepared by Kevin Bloom in wip.

1.9.1 -> 1.9.2:
- JNA contrib has been updated to jna-5.13.0
- Restore most of the speed of the generic function cache
- The ABCL-STEPPER contrib provides a interpreted implementation of
  CL:STEP.
- Re-worked the Gray Stream implementation to fix many issues.
- Introduced the POSIX-SYSCALLS contrib which allows one to
  set environment variables in the hosting JVM process.
- Fix GRAY-STREAMS:STREAM-ELEMENT-TYPE for binary streams.
- Fix CL:LOG for behavior at zero.
- Extensive grouting of accumulated bitrot in the ASDF-JAR
  contrib to enable more complete packaging of non-compilation
  artifacts as well as systems residing in jar files.
- EXTENSION:REGISTER-ASDF adds a directory to ASDF by using
  the configuration API.
- SYSTEM:ZIP now works with source in jar files.

https://abcl.org/release-notes-1.9.2.shtml

1.9.0 -> 1.9.1:
- Avoid NIL in simple LOOP from FORMAT directives.
- Maven may now be used for building/testing ABCL.
- The build autoconfigure targets for openjdk17+ now add
  necessary opens command line switches to enable the successful use
  of CL+SSL via CFFI on such platforms.
- ABCL-ASDF:MAKE-LOCAL-MAVEN downloads a version of
  Maven installed into the local XDG directory location and
  configures its subsequent use in the current session.  ABCL-ASDF
  provides a restart to invoke this installation if Maven can't be
  located at runtime.
- fix compilation of a few TYPE-ERROR cases
- Fix SYS:RUN-PROGRAM waiting problems
- DEFMETHOD now accepts subtypes of MOP:SPECIALIZER as a
  discriminator.
- Provide SETF'abl api for inspecting and modifying the underlying
  JVM context classloader.
- Implement THREADS:GET-JAVA-THREAD
- Use TLS for all http resource names.
- Upgrade to jna-5.12.1 and asdf-3.3.6
- Enable compilation of wide indicies for ALOAD, ASTORE,
  ILOAD, ISTORE, LLOAD, and LSTORE opcodes.
- Native threads are now the default.
- Fix inspection of LispThread stack segments
- Implement array types for JNEW-RUNTIME-CLASS
- superclass constructor chaining for JNEW-RUNTIME-CLASS
- Fix class annotations on openjdk17 and newer
- Implement proper use of signals to fallback

https://abcl.org/release-notes-1.9.1.shtml

1.8.0 -> 1.9.0:
- JSS update to javaparser-3.24.2
- Fill slots operation and operands with DivisionByZero condition
  when it is raised
- Update fill pointer when arrays are shrunk if necessary.
- Use PUSHNEW for CL:*FEATURES*; place :EXTENSIBLE-SEQUENCES in
  CL:*FEATURES* where appropiate
- Accessible symbols are always printed with package prefix
- Improve DRIBBLE to save almost everything, lexically closing over
  new REPLs, now cleanly closing/restarting
- When reading ZIP archives from streams, use modified date of byte source.
- The implmentation now uses :NEWEST for the version of references to
  EXT:JAR-PATHNAME objects which have been cached.
- Address inconsistency between populating entries in EXT:JAR-PATHNAME.
- Fix ZipCache to use the file system modification date
- EXT:AS-JAR-PATHNAME-ARCHIVE returns reference to a CL:PATHNAME as a
  EXT:JAR-PATHNAME
- DISABLE-ZIP-CACHE isn't currently working
- Fix SYS:PROCESS-PID with SYS:RUN-PROGRAM

https://abcl.org/release-notes-1.9.0.shtml

1.7.1 -> 1.8.0:
- Support openjdk15
- Serialization of top-level, named functions.
- JAVA:JCLASS now works on all arrays of primitive type.
- ABCL-INTROSPECT adds EXT:READ-CLASS to conveniently read java class
  bytes from the source referenced by a PATHNAME.
- The compiler now properly emits make-array for top-level specialized
  vector forms.
- Loading ABCL-INTROSPECT now adds the function EXT:STREAM-UNIX-FD
  which returns the integer of the underlying file descriptor from a
  socket stream reference.
- Less cryptic warnings for ignored socket write timeout.
- JNEW-ARRAY-FROM-ARRAY now capable of constructing all possible
  arrays of primitive type.
- Fix running openjdk11 compilation on openjdk8.
- Fix SYS:RUN-PROGRAM issues with openjdk11.
- Re-work strategy for the denotation of the hosting runtime
  platform *in CL:FEATURES* to include a "JAVA-<n>" where "<n%gt;" is
  an integer denoting the major version of the platform according to
  JEP-223.
- For CL:MAKE-ARRAY, ensure :NIO-BUFFER argument works in all cases,
  fix :NIO-DIRECT for (unsigned-byte 16) specialized arrays.
- Fix wildcard matching to work on pathnames consisting of only #\*
  characters.
- Fix loop destructuring problems.
- Fix VECTOR-PUSH-EXTEND for (UNSIGNED-BYTE 8).
- CALL-NEXT-METHOD and NEXT-METHOD-P as local functions.
- Make the pre-compiler be more careful in optimizing lambdas.
- Ensure that SYS:CHECK-REDEFINITION does not signal error
  conditions.
- Fix FILE-POSITION by resetting file charset decoder before
  conversion.
- Fix capacity allocation for arrays specialized on created via an
  CL:MAKE-ARRAY :NIO-BUFFER argument.
- Use jna-5.6.0.

https://abcl.org/release-notes-1.8.0.shtml
