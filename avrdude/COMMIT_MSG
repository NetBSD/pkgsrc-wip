cross/avrdude: Update to 7.3

- Switch to CMake build system
- Add bl3 file for shared library
- Fix "doc" option

Changes in version 7.3:

  * Major changes compared to the previous version:

    - Connect target via -P serialadapter[:sn] and -P usb:vid:pid[:sn] #1498
    - Add io and sram memory info in lieu of incomplete data memory
    - New test-avrdude script in tools #1645
    - Update SerialUPDI protocol #1627
    - Terminal
        + Command regfile #1580
        + Command factory reset #1642

  * New devices supported:

    - AVR16EB14, AVR16EB20, AVR16EB28, AVR16EB32
    - AVR64DU28, AVR64DU32

  * New programmers supported:

    - ft2232h_jtag, ft232h_jtag
    - dryboot

  * Issues fixed:

    - Provide sib memory for AVR8X parts #1479
    - HAS_VTARG_READ not utilized in source code #1469
    - -c stk500 only works with stk500v2 firmware #1467
    - Read silicon revision from modern AVRs #1472
    - Dryrun doesn't overlap XMEGA flash memories #1485
    - 7e94ed4442b breaks flashing GT2560 boards #1503
    - Cross-platform support for 1200bps touch #1500
    - Read ATmega324PB and ATmega328PB serial number #1509
    - EEPROM file generates error with 7.2 #1508
    - PGM LED not activated for flash or eeprom write #1514
    - Adding the Avrdude build version to avrdude.conf #1475
    - Harmonise WIN32 and POSIX serial comms timeout #1249
    - Old avrdude.conf can result in a segmentation fault #1544
    - Support AVR EB series #1546
    - Programmer in .avrduderc not recognised #1551
    - JTAG signature write ineffective #1527
    - Control forced loading of ~/.avrduderc #1548
    - Warn if avrdude and avrdude.conf versions don't match #1562
    - Terminal part command could need an update #1558
    - Proposal: Add memory sram #1559
    - jtagmkI.c/jtagmkII.c rely on OCDEN being hfuse bit 7 #1537
    - Certain terminal commands may be confusing #1570
    - Upload port required for -cdryrun on MacOS #1578
    - Make programmer -c name checking more forgiving #1591
    - Query a programmer's current clock speed #1329
    - Differentiate USB programmers with the same VID/PID #973
    - Add AVR-DU series latest information #1595
    - Provide simple way to factory reset a chip #1619
    - Incorrect SerialUPDI communication for NVM V3, V4 and V5 #1621
    - SerialUPDI programmer can fail when erasing EEPROM #1622
    - SerialUPDI - NVMProg key not being accepted immediately
      after NVM V3+ chip completes boot #1623
    - USE_STATIC_LIBS builds fail to detect libreadline.so #1624
    - Writing one-byte files to flash fails #1633
    - Integrate test-avrdude github action using dryrun #1643
    - Test script issues #1649
    - SerialUPDI unable to write USERROW memory on AVR64DU32 #1655
    - The last write/erase can fail with -c jtag2updi #1661
    - Improve programmer documentation in avrdude.conf #1437

  * Pull requests:

    - Add JTAG support to avrftdi #1324
    - Fix probing of the generic -c stk500 programmer #1468
    - Utilize HAS_VTARG_READ defined in avrdude.conf #1470
    - Provide sib memory for AVR8X parts #1480
    - Read chip revision and add IO memory for PDI/UPDI parts #1474
    - Replace string comparison functions #1482
    - Fix overlapping XMEGA flash memories for dryrun #1486
    - Exit if part and programmer are incompatible #1487
    - Add io memory for classic parts #1488
    - Add AVR-EB parts #1491
    - Review calibration read command in avrdude.conf #1495
    - Provide serialadapter entity in avrdude.conf #1497
    - Add -P serialadapter[:sn] and -P usb:vid:pid[:sn] #1498
    - Add -xdelay=n to wiring and improve reset timing #1505
    - Reduce stk500v2_getsync() timeout #1506
    - libserialport github action #1512
    - Support serial port "touch" using libserialport #1507
    - Read prodsig of classic parts #1510 #1520-21 #1524-26
    - Adapt stk500 readback values for usbtiny.c #1511
    - Add LED support for ScratchMonkey programmer #1517
    - Review and update prodsig memories for U/PDI parts #1518
    - Add id as comment to avrdude.conf definitions #1519
    - Model prodsig for -c dryrun #1522
    - Fix tempsense size, AVR-EB memory offsets and avrdude.conf
      memory order #1523
    - Review and update LED support #1528
    - Fix SerialUPDI with NVM v3 controller #1531
    - Add bootloader hashes from the Sanguino Arduino repo #1533
    - Support MinGW cross compiler #1539
    - Add avrdude_conf_version to grammar #1542 #1547
    - Change execution order in silicon revision check #1543
    - Add Arduino avrdude_packing github action for git man #1540
    - Introduce memory types in lieu of memory name comparisons #1538
    - Allow UPDI_SIB of AVR_EB in serialupdi #1549
    - Harmonise WIN32 and POSIX serial comms timeout #1550
    - Test programmers for prog_modes and type #1557
    - Remove paged eeprom property from ATtiny43U #1556
    - Review write_byte() functions #1554
    - Provide option -N for do not load personal config file #1555
    - Print warning when avrdude and avrdude.conf versions doesn't match #1564
    - Always warn if part and programmer are incompatible #1563
    - Provide -x xtal=... option for STK500 v1 and v2 #1566
    - Update part cmd #1568
    - Update src/CMakeLists.txt #1569
    - Add memory sram and remove memory data #1571
    - Add GNU readline to mingw github action #1576
    - Provide libavrude functions to access part config values #1577
    - Add get_vtarget/varef/fosc/sck_period for programmers #1574
    - Provide terminal regfile command #1580
    - Ignore port settings when using -c dryrun #1581
    - Add more PL2303 compatible USB PIDs #1583
    - Faster build.sh script with option -j #1586
    - Terminal sck command improvements #1587
    - Differentiate USB programmers with the same VID/PID #1588
    - Provide configuration variable default_baudrate #1590
    - Increase index entries in avrdude.texi #1592
    - Suggest programmers using weighted Damerau-Levenshtein #1593
    - Switch PICkit4 and SNAP avr/pic modes using -xmode #1596
    - Support AVR64DU28 and AVR64DU32 #1601
    - Force STK500 EEPROM paged r/w for bootloaders #1602
    - Provide terminal keep alive code for jtagmkII_updi #1603
    - Fix Arduino Nano Every EEPROM writing for UPDI parts #1604
    - Provide and use locate_part_by_signature_pm() #1605
    - Harden AVRDUDE against pre-C99 libraries #1608
    - Add MSYS2 ucrt64, clang32 and clang64 to build.yml #1612
    - Updates to SerialUPDI protocol #1627
    - Fix upload of one-byte files to flash #1634
    - Add CH343 USB to serial adapter #1640
    - Add dryboot programmer #1641
    - Provide terminal command factory reset #1642
    - Add tools/test-avrdude #1645
    - Add test-avrdude using dryrun to github action #1646
    - Add delay for AVR Dragon and Arduino Nano Every #1647
    - Make test-avrdude script resilient to old bash #1650
    - Create test-avrdude temporary files in the script itself #1651
    - Enable writing of 512-byte page for USERROW #1659
    - Read signature on -c jtag2updi exit if last op was write #1662
    - Determine Autoconf package version from cmake's #1663
    - Add more programmer descriptions #1667
    - test(1) string comparison uses =, not == #1668

  * Internals:

    - Introduce memory types in lieu of memory name comparisons #1538
      This will enable to decouple memory names from function
    - Added a knowledgebase on register files of parts


Changes in version 7.2:

  * Major changes compared to the previous version:

    - libgpiod support for linuxgpio #1299
    - Support jtag2updi -U UPDI EEPROM write #1318
    - avrdude.conf reconciled with ATDFs #1343
    - avrdude -p part/s now also shows part variants #1343
    - New programmer dryrun for testing #1347
    - New -T cmd to mix terminal with -U commands #1373
    - Run -t interactive terminals in CLI option order #1402
    - Terminal
        + Command config (mnemonic fuse setting) #1365
        + Write to memory from files #1358
        + Command save memory to file #1396
        + Subshell command ! #1397
        + Command include file #1429

  * New devices supported:

    - AT89S51, AT89S52
    - AT90S2323, ATtiny22
    - ATmega16M1, ATmega32C1, ATmega64C1
    - ATA5505
    - ATA6612C, ATA6613C
    - ATA6614Q
    - ATA6616C, ATA6617C
    - ATA664251
    - ATmega16HVA, ATmega8HVA
    - ATmega16HVB, ATmega16HVBrevB, ATmega32HVB, ATmega32HVBrevB
    - ATmega64HVE2, ATmega32HVE2
    - AT90PWM1
    - AT90PWM161, AT90PWM81
    - ATxmega32C3
    - ATxmega32D3
    - ATtiny416auto

    - Variants of known devices now accepted:
      AT32UC3A0512AU AT90PWM81EP    AT90S1200A     ATmega103L
      ATmega1280V    ATmega1281V    ATmega128L     ATmega161L
      ATmega162L     ATmega162V     ATmega163L     ATmega164PV
      ATmega165PV    ATmega165V     ATmega168PV    ATmega168V
      ATmega169L     ATmega169PV    ATmega169V     ATmega16L
      ATmega16U4RC   ATmega2560V    ATmega2561V    ATmega324PV
      ATmega3250PV   ATmega3250V    ATmega325PV    ATmega325V
      ATmega3290PV   ATmega3290V    ATmega329PV    ATmega329V
      ATmega32L      ATmega32U4RC   ATmega48PV     ATmega48V
      ATmega640V     ATmega644PV    ATmega644V     ATmega6450V
      ATmega645V     ATmega6490V    ATmega649V     ATmega64L
      ATmega8515L    ATmega8535L    ATmega88PV     ATmega88V
      ATmega8L       ATtiny102F     ATtiny104F     ATtiny11L
      ATtiny12L      ATtiny12V      ATtiny13V      ATtiny15L
      ATtiny22L      ATtiny2313V    ATtiny24V      ATtiny25V
      ATtiny261V     ATtiny26L      ATtiny28L      ATtiny28V
      ATtiny44V      ATtiny45V      ATtiny461V     ATtiny84V
      ATtiny85V      ATtiny861V     AVR128DA28T    AVR128DA32T
      AVR128DA48T    AVR128DA64T    AVR128DB28T    AVR128DB32T
      AVR128DB48T    AVR128DB64T    AVR32DA28T     AVR32DA32T
      AVR32DA48T     AVR32DB28T     AVR32DB32T     AVR32DB48T
      AVR64DA28T     AVR64DA32T     AVR64DA48T     AVR64DA64T
      AVR64DB28T     AVR64DB32T     AVR64DB48T     AVR64DB64T


  * New programmers supported:

    - dryrun
    - raspberry_pi_gpio
    - Flyswatter2
    - CH341A
    - Kanda AVRISP-U
    - arduino_as_isp
    - scratchmonkey, scratchmonkey_pp, scratchmonkey_hvsp

  * Issues fixed:

    - STK500V2 ISP problem with ATmega8/8515/8535, ATmega16 and
      ATmega32 #425
    - CMAKE issue: parport, linuxspi and linuxgpio not available
      when compiled #1107
    - MSYS2: Linker error when readline is present. #1293
    - CMake Warning for MSVC build about CMAKE_BUILD_TYPE #1290
    - PICKit 2: MSVC build of avrdude Windows binary does not work
      #1006
    - CMake version not checked properly in Ubuntu 18.04 #1300
    - Pin limit too low for LePotato RPi clone #1307
    - Port Linux sysfs GPIO feature to libgpiod #831
    - Allow direct reset connection #1262
    - AT89S51 and AT89S52 support for avrdude #1304
    - Using serialupdi gives mismached help message #1311
    - jtag2updi -U EEPROM write fails for AVR Dx parts #1128
    - Usbtiny initialization never resets the part #1321
    - Parts with *L, *PV and *V suffixes + others are missing in
      avrdude.conf #1092
    - -c urclock should progressively shrink metadata #1352
    - Write errors in fuses/lock bits with unused bits #1371
    - Some SPI read/write commands incompatible with .ATDF #1370
    - Avrdude can segfault writing ihex or srec files #1390
    - Avrdude srec format too lax when writing #1391
    - Avrdude fails with AT90S8515 #433
    - AT90S8515 STK500v2: only odd bytes are programmed #500
    - STK500v2 ATtiny15 problem #509
    - Downgrade missing USB device warning #1398
    - Avrdude can not write usersig in terminal mode #1361
    - avr109 atmega2564rfr2 erase timeout too short #336
    - Add ScratchMonkey #989
    - Warnings for MSVC build #1452, #1460
    - [Regression] -F flag not correctly honored #1462
    - Missing access to user signature rows in ATmega256RFR2 et al. #379

  * Pull requests:

    - Correct memory mode, delay and readback (classic parts) #1272
    - Only send write flash cmd to STK500v2 ISP programmers if page
      is not empty #1273
    - Fix docu that avrftdi bit numbers start with 0 #1276
    - Silence gcc compiler warnings #1277
    - Reduce complexity of grammar #1282
    - CMake: Convert verbal switches into boolean expressions #1285
    - Add extra_features to identify a programmer's abilities #1286
    - CMake: Remove LIB_LIBHID from configuration in favour of
      hard-coding #1294
    - build.sh: For compatibility with old CMake versions, use old
      syntax to generate build system #1301
    - Extend max pin number to 1000 #1308
    - Add optional libgpiod support to linuxgpio #1299
    - Auto-reset via RTS for direct RTS-reset connection #1309
    - Support AT89S51, AT89S52, AT90S2323 and ATtiny22 #1310
    - Remove PM_PDI flag for avrispv2 programmer #1314
    - Make terminal write address optional for 1-byte memories #1315
    - Print meaningful error message when using the serialupdi and
      bitbanged UART ISP programmers #1317
    - Support jtag2updi -U EEPROM write #1318
    - Fix return value in usbtiny_cmd() and wrong error msg #1323
    - Add CH341A programmer #1215
    - Terminal read, write and erase with address intervals #1320
    - Add Flyswatter2 programmer #1332
    - Update avrintel.[ch] #1333
    - Improve bitclock, sck and terminal documentation #1331
    - Add -xhelp to programmers #1338
    - Move avrintel[.ch] into libavrdude #1341
    - Review avrdude.conf, add variants, reconcile with ATDFs #1343
    - Add -xvtarg, -xvaref and -xfosc extended parameters #1345
    - Add case-agnostic string comparisons to strutil.c #1346
    - Provide a programmer dryrun that emulates programming #1347
    - Add variants of obsolete parts to avrdude.conf #1348
    - Add option -f to build.sh #1342
    - Document -n behaviour wrt -U and terminal #1351
    - Progressively shrink metadata for -c urclock #1357
    - Extend <data> notion to files in terminal write #1358
    - Add fuse0 to ATxmega128A4U/64A4U/32A4U/16A4U #1360
    - Add configuration for Kanda's AVRISP-U programmer #1363
    - Add more Avrdude CLI usage examples #1364
    - Provide terminal config command for fuses and lock bits #1365
    - Initialise unused bits of classic/XMEGA- part fuses/lock bits
      with factory defaults #1372
    - Implement -T cmd to mix terminal with -U commands #1373
    - Prevent terminal write error for unchanged r/o region #1375
    - Remove pgm->page_erase() function when unable to do so #1376
    - Write fuse/lock only when terminal config changes them #1378
    - Provide programmer arduino_as_isp #1383
    - Provide debug messages for the dryrun programmer #1385
    - Rewrite fileio functions to cater for memory segments #1392
    - Add more documentation for programmers #1393, #1394, #1395
    - Provide terminal save command #1396
    - Provide terminal subshell command ! #1397
    - Fix stk500v2.c's write_byte() for old parts #1386
    - Document terminal comments #1399
    - Expand authorship of documentation #1400
    - Fix memory leak in avrcache.c #1401
    - Run -t interactive terminals when it is their turn with
      respect to -t/-T/-U command line option order #1402
    - Mute missing USB device warning for lower verbosity #1403
    - Implement bytewise cache for usersig #1404
    - Relax checks before executing the -T/-U operations #1405
    - Define usersig memory for ATmega*RF[AR]* parts #1406
    - Increase timeout for emulated butterfly chip erase #1411
    - Update reference to AT90S4433 datasheet #1415
    - Update alf programmer info and URL #1416
    - Update URLs for 89isp programmer #1417
    - Update ft2232h programmer info and URLs #1418
    - Update butterfly_mk info #1419
    - Remove outdated web URLs for O-Link #1420
    - Update URLs for the ttl232r programmer #1421
    - Update usbasp programmer info #1422
    - Remove comment and URL for arduino-ft232r programmer #1423
    - Enable -c programmers to access -c string #1424
    - Add scratchmonkey programmers #1429
    - Use pgm->id list for alias names of a programmer #1430
    - Fix writing of empty flash memory #1438
    - Provide terminal include command #1439
    - Add jtag2updi -xrtsdtr extended parameter #1425
    - Update info on bsd programmer #1450
    - Suppress overzealous compiler warnings #1454, #1461
    - Bail out on failed initialisation unless -F was given #1463
    - Fix -n warning for first interactive terminal #1465
    - Fix classic-part usersig memory for jtag #1466

  * Internals:


Changes in version 7.1:

  * Major changes compared to the previous version:

    - Provide a new programmer -c urclock for bootloader urprotocol
      + Urclock fully supports vector bootloaders at no extra code size
      + Uprotocol
        https://github.com/stefanrueger/urboot/blob/main/urprotocol.md
        allows programming much shorter bootloaders with more features:
         * Exports a pgm_write_page(sram, progmem) function that the
           application can call at FLASHEND-4+1 to use flash as storage
         * Supports EEPROM reads/writes
         * Protects itself from overwriting
         * Vector bootloaders: can protect the reset vector
         * Offers Chip Erase function (quicker than uploading 0xff's)
      + Urclock when compiled with libreadline supports bootloaders in
        terminal mode (preventing them from WDT timeout)
      + The -c urclock programmer provides a metadata interface that
        allows unused flash to be used as storage
      + avrdude -c urclock is backward compatible with avrdude -c arduino

    - Add TPI support for Microchip tools #1205

    - Add C-strings, C characters and double to terminal write

    - Provide write flash in the terminal (using a cache)

    - Provide page erase in the terminal as pgerase

    - Add support for NetBSD and OpenBSD to build.sh

  * New devices supported: none

  * New programmers supported:

    - urclock           = Urclock programmer for bootloaders using urprotocol
    - xplainedmini_tpi  = Atmel AVR XplainedMini in TPI mode
    - xplainedpro_pdi   = Atmel AVR XplainedPro in PDI mode
    - atmelice_tpi      = Atmel-ICE (ARM/AVR) in TPI mode
    - powerdebugger_tpi = Atmel PowerDebugger (ARM/AVR) in TPI mode
    - pickit4           = MPLAB(R) PICkit 4 in JTAG mode
    - pickit4_tpi       = MPLAB(R) PICkit 4 in TPI mode
    - snap              = MPLAB(R) SNAP in JTAG mode
    - snap_tpi          = MPLAB(R) SNAP in TPI mode
    - arduino_gemma     = Arduino Gemma bootloader disguised as USBtiny
    - adafruit_gemma    = Adafruit Trinket Gemma bootloader disguised as USBtiny
    - digilent-hs2      = Digilient JTAG HS2 (MPSSE)
    - tigard            = Tigard interface board

  * Issues fixed:

    - Fix micronucleus bootloader to check for unresponsive USB
      devices #945
    - Fix src/CMakeLists.txt to honor CMAKE_INSTALL_LIBDIR #972
    - [bug #43898] atmega644p remains stopped after JTAG
      transaction #366
    - Wrong timings for ATmega328PB and other parts in avrdude.conf
      #976
    - FT232R based programmer ATmega2560 Flash Reading Problem #995
      also #474
    - Enable avrdude to send full input file incl trailing 0xff
      #936
    - Portname default for linuxspi programmer not recognized #926
    - JTAG1 unable to write fuse and lock bits #443
    - Unknown option '-s' on command line (legacy) #1032
    - STK500/arduino/xbee programmers fail EEPROM r/w for some
      parts #967 also #421
    - Design issue: jtag2updi is hardcoded to fail for parts with
      has_pdi = yes #1037
    - Option parse error: after -U flash:w:program_to_upload.hex,
      subsequent -V ignored #441
    - Automatic verification is designed to fail for stdin #1044
    - Display correct number of bytes when input file has holes
      #1005
    - Cmake installs avrdude.1 in the wrong place on Linux #1064
    - avr910 -qq prompt too verbose #1081
    - avrftdi.c: paged write can fail at addr 0 #1073
    - Permission denied accessing /sys/class/gpio/gpioX/direction
      would leave pin exported #472 also #372
    - Raspberry Pi sysfs bug workaround for linuxgpio driver #386
    - Fix CMake avrdude.conf dependency to avrdude.conf.in #1035
    - CMake infrastructure does not handle documentation #947
    - New feature: ability to reset FLIPv2 targets #733
    - Fix Extended address not sent with avr109/butterfly #360
      and #454
    - Enable AVR JTAG ICE mkI program EEPROM in terminal mode
      #1054
    - Make flash writes work in terminal mode #1020
    - Add support for XMEGA specific AVR109 protocol extensions
      used by XBoot #200
    - jtag2updi can not write EEPROM in terminal mode #1116
    - Make UPDI programmers less verbose during initialization
      #1084
    - Quell mode isn't handled systematically #1114
    - Mixing the progress bar with warning messages #1136
    - Inconsistent terminal output re stdout and stderr #1130
    - Supress the warning for Microchip SNAP #1135
    - ATtiny85 communication problem with default bitclock #1133
    - [Regression] Optiboot for "modern AVRs" no longer works #1120
    - Cannot access EEPROM on some bootloader/part combos #970
    - -U writes sometimes more bytes to flash/memory than input
      file has #1050
    - debugWire using dragon_dw and jtag2dw not working #1168
    - && echo OK does not work after -c urclock #1192
    - Serial drain timeout needs calibrating for -c urclock #1193
    - avrdude -U file.elf misses second and following suitable
      sections in elf segements #1204
    - Avrdude on macOS has problems with libedit #1173
    - urclock support for optiboot_x and optiboot_dx #1200
    - Terminal does not continue read/dump correctly #1201
    - JTAG3 programmer info not available in ISP mode #1212
    - Extra avrdude> prompt with -qqt in terminal mode #1214
    - PICkit4 and SNAP serial numbers not read by Avrdude #1038
    - Optiboot EEPROM support cannot be detected by avrdude #1224
    - megaAVR JTAG programming doesn't work for SNAP and PICkit4
      #1052
    - urclock/FTDI communication issues #1245
    - stk500v2.c dumps core on open #1254
    - linuxgpio cannot use pin 0 #1228
    - Remove non-working butterfly page erase function
    - linuxgpio and linuxspi: input files with unset bytes don't program
      correctly #1263 #455

  * Pull requests:

    - Fix .Dd macro in manpage #949
    - fix M1 homebrew path #950
    - CMake Enhancements #962
    - Reduce programmer desc string length in avrdude.conf
      to < 80 characters #1000
    - Dragon JTAG fix #979
    - adding support for all Linux baud rates v.2 #993
    - Replace internal knowledge in jtag3.c by a public API #996
    - JTAG3 UPDI EEPROM fix #1013
    - Treat x bits in .conf SPI commands as 0 #943
    - Fix avrftdi support for ATmega2560 et al #998
    - Fix avrdude.conf timings for ATmega328PB and other parts #1001
    - Fix PICKit2 ATmega2560 flash paged flash read #1023
    - Fix ft245r paged read for ATmega2560 et al #1018
    - Add option -A that supresses trailing 0xff optimisation
      and automatically do so for -c arduino #936
    - Fix linuxspi default port #933
    - Add support for high-voltage UPDI im jtag3.c #1015
    - Fix terminal write edge cases; add one read mode; add quell
      command #1025
    - Fix usbtiny read for parts with more than 64 kB flash #1029
    - CMakeLists.txt: fix build without C++ #1016
    - Provide file format I: Intel HEX with comments that ignores
      checksum errors #1030
    - Enable writing fuse and lock bits for AVR-JTAGICE #1031
    - Ignore -s flag as safemode is no longer supported #1033
    - Developer options to describe parts and
      extend avrdude.conf syntax #1040
    - Deprecate original STK500 v1 protocol in favour of optiboot
      and Arduino as ISP #1046
    - Add jtagmkii_updi programmer option #1048
    - Enable stdin verification, display correct number of bytes
      written/verified, check -U memory names against spelling
      errors and exit but skip -U memory updates with known
      memories that the part lacks #1053
    - Handle invalid -U file format specifiers for input #1042
    - Implement a dry run for -U updates before opening the
      programmer #1056
    - Implement -c <wildcard>/dev_options for printing avrdude.conf
      show comments with -p*/s or -c*/s; Reduce -p */r raw output;
      specifying the full memory name now always works; stop
      listing programmers where id starts with dot  #1059
    - Fix logfile short option in man-page; fix install dir for man
      page #1063
    - Use const for programmer functions where useful; add second
      argument for programmer enable interface function
      void (*enable)(PROGRAMMER *pgm, const AVRPART *p) #1078
    - Make avr910 programmer initialize() less verbose #1083
    - Fix flash paged write for avrftdi.c #1074
    - Fix 4 parts wrt to their interfaces in avrdude.conf; rewrite
      avrdude.conf.in file from avrdude -c* -p* output; reformat
      conditional programmers in avrdude.conf.in using -c*; fix
      reset=dedicated|io; entries #1086
    - Add prog_modes, a bitwise or of prgramming modes, to part and
      programmer definitions; add to part definition
       + mcuid, a unique id in 0..2039 for 8-bit AVR
       + n_interrupts, the number of interrupts
       + n_page_erase, if set, the # of pages erased for NVM erase
      implement a simple calculator in config_gram.y for numeric
      values; set part prog_modes, mcuid, n_interrupts and
      n_page_erase in avrdude.conf.in; add external intelligence
      about AVRs avrintel.[ch] to the project and warn during
      parsing if mcuid is incompatible with it #1091
    - Fix permission denied error in linuxgpio programmer #917
    - Add a programmer arduino_gemma for the Arduino Gemma
      bootloader and another one, adafruit_gemma, for the Adafruit
      Trinket Gemma bootloader in avrdude.conf; #1093
    - Add digilent-hs2 programmer in avrdude.conf #1094
    - Fix dependency chain between avrdude.conf.in and
      avrdude.conf #1095
    - Build docs with CMake #1096
    - New feature so user can print all compatible parts for a
      programmer using -p\? -c programmer and vice versa #1099
    - Add extended parameter disable_no_cs for linuxspi programmer
      #1100
    - Fix avr109 extended address #1101
    - Add support for Flip 2 reset on exit #1102
    - Support for Power Debugger analog readings in terminal mode
      #1105
    - Provide cached byte-wise read/write API #1106
    - AVR109: support for prodsig read and usersig read/write #1108
    - Add missing AVR variants the original JTAG ICE supports #1109
    - Improve help message in terminal and provide new command
      pgerase #1113
    - Fix pointer truncation for Windows x64 #1119
    - Fix jtag3_page_erase for targets with UPDI #1112
    - Fix writing of last word on DWORD TPI parts #1115
    - Use byte-wise read/write when page size is 1 in terminal
      cache #1121
    - Suppress Teensy USB communication error message on reboot #1122
    - Fix UPDI erase when target is locked #1125
    - Review and overhaul AVRDUDE's messaging system #1126
    - Look for ~/.config/avrdude/avrdude.rc then ~/.avrduderc #1131
    - Revamp terminal output (progress bar, callback and
      stdout/stderr) #1132
    - Detect PICkit4 and SNAP in PIC mode #1138
    - Mention -B in the error message #1139
    - Support optiboot, optiboot_dx and optiboot_x bootloaders for
      -c arduino #1140
    - Always use paged access for programmers that serve
      bootloaders #1141
    - Add libreadline-dev for Linux github action build #1146
    - Implementation of SerialUPDI page erase operation #1151
    - Fix Type 2 HV UPDI #1164
    - Rewrite authors/copyrights #1182
    - Add fallback for EM_AVR #1181
    - Add a workaround for issue 1173 #1185
    - Add xplainedpro_pdi programmer #1147
    - Provide Urclock programmer #1171
    - Fix JTAGICE mkII (not initializing after chip erase) #1172
    - Ensure default_programmer from config files is used #1174
    - Make terminal write's automatic number width less surprising
      #1175
    - Print HAVE_LIBREADLINE status when making the project #1184
    - Pad pages with input file contents before avr_write() #1188
    - Deprecate mosi/miso in favour of sdo/sdi #1189
    - Provide bootloader-hash tool #1190
    - Fix JTAGICE mkII parameters for parts with bootloaders #1191
    - Fix shell exit value when chip erase is delayed #1194
    - Support autobaud for urclock programmer #1198
    - Fix userrow size and page_size for ATtiny3216/7 #1199
    - Added TPI support for Microchip tools #1205
    - Fix reading of .elf files #1206
    - Use libedit only in interactive mode #1207
    - Add urclock support for bootloaders in low flash #1208
    - Terminal read improvements #1209
    - Print meaningful error when a too slow ISP clock is detected #1216
    - Check alternative USB PID for PICkit4/SNAP in PIC mode #1219
    - Remove extraneous avrdude> prompt at end of terminal session #1220
    - Read programmer serial number from libusb or hidusb #1223
    - Hint at -xeepromrw option in EEPROM error messages #1226
    - Add JTAG support for PICkit4 and Snap. #1233
    - Mention developer options in documentation and Usage() #1234
    - Print expected signature on signature mismatch #1237
    - To work around Issue #1107 #1240
    - Update build.sh for NetBSD #1241
    - Add FT2232H support for Windows, Tigard programmer #1242
    - Modify recv timeouts to accommodate urclock sync with ftdi
      #1246
    - CMake updates #1243
    - Silence conf path detection debug output #1247
    - Make WIN32 ser_recv() fail on time-out #1248
    - Guard urclock_getsync() against initial spurious input #1251
    - Change definition of NO_PIN to 1+PIN_MAX #1231
    - Fix partial matches for locate_mem() and do_cmd() #1256
    - Add abbreviated q command in terminal
    - Move static usbsn into serdev struct and remove serno #1258
    - Clean up avrdude.conf.in fixing a couple of bugs #1260
    - Add readline library replacement for MSVC #1264
    - Ensure full words are loaded for ISP programming #1265
    - Silence page erase in cache code #1266
    - Update to latest MSVC fork of hidapi to include bug fixes
      #1269

  * Internals:

    - Implement -c <wildcard>/dev_opts and -p <wildcard>/dev_opts
      for printing avrdude.conf programmer and part entries

    - Added shorter alternative ISP commands for avrdude.conf

    - Reformatted avrdude.conf to canonical form

    - Reviewed API for prgrammer functions: use const for
      programmer functions where useful; add second argument for
      void (*enable)(PROGRAMMER *pgm, const AVRPART *p) #1078

    - Reviewed messaging system making warnings and errors explicit
      and treat them systematically


Changes in version 7.0:

  * Major changes compared to the previous version:

    - Completely revamped Windows support, including MSVC
    - Started to add CMake (by now, parallel with autoconf/automake)
    - New-architecture devices (AVR8X mega and tiny) can access all
      fuses, and memory display shows meaningful alias names
    - The "safemode" feature has been removed. The major class of
      programmers it has been designed for (lowlevel bitbang
      programmers on parallel or serial ports) virtually doesn't exist
      anymore, and the fuse combination that was covered by it do not
      match the fuses of modern AVR devices anyway.
    - avrdude.conf is now being looked up in the location of the
      executable file first, before considering the configured default
      location; this eases a "portable use" where the entire suite is
      not installed into its configured default location. (Basically
      only relevant for unixoid systems; on Windows, this search order
      has been used for many years already.)

  * New devices supported:

    - ATtiny828, ATtiny87, ATtiny167, ATtiny48, ATtiny102, ATtiny104
    - LGT8F88P, LGT8F168P, LGT8F328P (fixed names of these parts)
    - ATmeg164A, ATmega169A, ATmega169P, ATmega169PA, ATmega329A,
      ATmega329PA, ATmega3290, ATmega3290A, ATmega3290PA, ATmega649A,
      ATmega649P, ATmega6490A, ATmega6490P, ATmega165, ATmega165A,
      ATmega165P, ATmega165PA, ATmega325A, ATmega325P, ATmega325PA,
      ATmega645A, ATmega645P, ATmega3250A, ATmega3250P, ATmega3250PA,
      ATmega6450A, ATmega6450P
    - ATmega48A/48PA/88A/88PA/168A/168PA, ATmega164A/644A/644PA,
      ATmega16A/32A/64A/128A, ATtiny13A, ATtiny24A/44A/84A,
      ATtiny261A/461A/861A, ATtiny828R, ATtiny2313A, ATtiny1634R
    - ATtiny3224, ATtiny3226 and ATtiny3227
    - AVR16DD14/20/28/32, AVR32DD14/20/28/32 and AVR64DD14/20/28/32
    - AVR8EA28/32, AVR16EA28/32/48, AVR32EA28/32/48 and AVR64EA28/32/64
    - ATmega16U4


  * New programmers supported:

    - SerialUPDI (UPDI devices connected to serial port with few
      passive parts)
    - PicKit4 / SNAP (now also in ISP and PDI mode)
    - Teensy bootloader (PR #802)
    - Micronucleus bootloader (PR #786)
    - ft232h (generic variant, PR #842)
    - Kristech KT-LINK FT2232H interface with IO switching and voltage
      buffers (PR #930)

  * Issues fixed:

    - Curiosity Nano and terminal mode #790 (only the actual bugs
      reported)
    - CMake doesn't correctly handle conditionals in avrdude.conf.in
      #776
    - CMake doesn't detect FreeBSD's libusb-1.0 (compatibility) #775
    - CMake doesn't correctly handle conditionals in avrdude.conf.in
      #776
    - CMake: Recognize more than just bison #785
    - [bug #26007] ATTiny167 not supported #150
    - [bug #47375] ATtiny102/104 descriptions missing in configuration
      file #409
    - No error message when connecting to a not-connected AVRISP mkII
      programmer #813
    - [bug #53180] missing programmer or bad -P option argument
      doesn't result in error message #471
    - ATmega328P reported as lgt8fx328p #812
    - [bug #48004] Dead link for linuxgpio in avrdude description #419
    - Segmentation fault when writing ATtiny104 fuse #823
    - USBasp returns ERANGE for unknown error #848
    - Compiler warnings #856
    - Can't get serialupdi to work #874
    - Rework HID support for Windows #881
    - List of signing keys? #884
    - Pickit4 UPDI is writing at offset 0x4000 into flash instead of 0x0000. #892
    - SerialUPDI programmer can't write to usersig/userrow in terminal mode #889
    - Signature read command for ATmega165* was wrong (no-id)
    - Cannot use non-standard baud rates for uploading on MacOS #771
    - Wrong values in avrdude.conf #897
    - AVR-Eclipse plugin broken by missing -u commandline option #890
    - Timeout passed to hid_read_timeout() is too short for instances
      where the EDBG AVRISP 'Enter Programming Mode' command fails #900
    - Terminal write mode doesn't support string input (yet) #913
    - Terminal mode: memory fill with strings may cause Avrdude to crash. #922
    - Some parts have wrong or missing ISP commands #915
    - Incorrect -b conversion for linuxspi programmer #927
    - ATtiny43U calibration memory size #921

  * Pull requests:

    - GitHub Migration #765
    - Update toplevel files. #767
    - GitHub Migration part 2 #768
    - Remove 'windows' folder with giveio.sys driver #769
    - SerialUPDI implementation - release candidate 1 #772
    - Fix typos #777
    - Fix memory leaks #779
    - As promised, documentation for SerialUPDI programmer #782
    - Improve CMake project #783
    - Fix avr_read() for page reads #784
    - Serialupdi manpage #787
    - Add PicKit4 and SNAP programmers #791
    - Use yacc/byacc as an alternative to bison, closes #785 #793
    - Derive program version string from last commit #794
    - Find 'avrdude.conf' based on absolute path to executable #780
    - buspirate: fix -Wtautological-constant-out-of-range-compare #796
    - avrftdi: don't use the deprecated ftdi_usb_purge_buffers routine #792
    - Ignore ctags index file #804
    - term: fix memleakOnRealloc #806
    - Add missing ATtiny targets to avrdude.conf #803
    - Add support for Teensy bootloader #802
    - Conffile clean up #801
    - Fix typos all over the code #807
    - Add MSVC builds and better WinUSB/FTDI support #798
    - buspirate: fix invalidScanfArgType_int warning #808
    - Ignore ac_cfg.h.in~ #810
    - Notify open failure #814
    - Print expected part #817
    - pindefs: conform to the function declaration #818
    - Add support for Micronucleus bootloader #786
    - Remove ac_cfg.h from libavrdude.h #820
    - CMake: enable dynamic-link library for libavrdude #826
    - Fix for TPI fuse write (issue #823) #828
    - Add missing ATmega__5 and ATmega__9 targets to avrdude.conf #809
    - Add missing ATmega and ATtiny targets #832
    - Added missing RTS/DTR management feature to serialupdi
      programmer #811
    - Add missing tinyAVR-2, AVR DD and AVR EA targets #836
    - Add a new programmer ft232h #842
    - Reduce verbosity when setting fuses and uploading programs #845
    - jtagmkii: Reduce the number of sync attempts to 10 + print
      number of attempts #844
    - CMake: add initial support for installing lib and include files #829
    - Add SPI support to USBtiny #816
    - Add more memory sections to read from #815
    - Add a build script for Unix-like systems #849
    - Fix receive buffer implementation in ftdi_syncbb programmer #843
    - CMake: split configuration in two files #852
    - Set number of connection retry attempts for Arduino/STK500
      programmer #854
    - Fix libusb-1.0 error strings #850
    - Assign proper type to msg[] in errstr() #857
    - Fix Arduino retry attempts #855
    - CMake: use CMAKE_CURRENT_BINARY_DIR to locate avrdude.conf #858
    - Remove the "safemode" feature. #859
    - Add support for reading from more memory sections #863
    - Alias keyword #868
    - Add fuse name aliases to avrdude.conf + tweak update.c #869
    - Print JTAG3 clocks after configuration + string formatting #853
    - Tweak programmer info formatting strings #872
    - Remove libhid support in ser_avrdoper.c in favor of libhidapi #882
    - Reduce jtag3 output verbosity #877
    - Fix Curiosity Nano target voltage #878
    - Smallest possible fix for PL2303HX #885
    - Add missing USBtiny derived programmers #873
    - Cleanup of POSIX serial init code #886
    - Avrdude terminal write improvements #880
    - Add userrow and usersig aliases #888
    - For UPDI devices do not add offset when accessing flash. #895
    - Support both userrow and usersig names #893
    - Fix ugly terminal write bug #896
    - Improve terminal read functionality #894
    - Macos nonstandard baudrates #898
    - Fix errors in Avrdude.conf #899
    - Minor terminal write improvements #902
    - Term docs #903
    - Add progressbar for read and write command #912
    - Add MacOS serial/parallel port note #908
    - Add ATmega16U4 to avrdude.conf #910
    - Mask out unused ATmega32U4 efuse bits #909
    - Increased timeout passed to hid_read_timeout() #901
    - Add terminal write string functionality #914
    - Update documentation link to new URL #929
    - Fix terminal write buffer overflow issue #924
    - Fix linuxspi baud to clock period calculation #931
    - Added KT-LINK FT2232H interface with IO switching and voltage buffers. #930

  * Internals:

    - Development moved to Github
    - Addition of "alias" keyword to avrdude.conf.in syntax; used
      for fuse name aliases right now
