$NetBSD$

* Part of patchset to build chromium on NetBSD
* Based on OpenBSD's chromium patches, and
  pkgsrc's qt5-qtwebengine patches

--- tools/code_cache_generator/BUILD.gn.orig	2025-05-05 19:21:24.000000000 +0000
+++ tools/code_cache_generator/BUILD.gn
@@ -15,8 +15,34 @@ if (is_android) {
   import("//build/config/android/rules.gni")
 }
 
-executable("code_cache_generator") {
+group("code_cache_generator") {
+    deps = [ ":code_cache_generator_executable" ]
+    if (target_os == "netbsd") {
+      deps+= [ ":run_paxctl_code_cache_generator" ]
+    }
+}
+
+action("run_paxctl_code_cache_generator") {
+  deps = [ ":code_cache_generator_executable" ]
+
+  script = "//v8/tools/run-paxctl.py"
+  stamp = "$target_gen_dir/paxctl_stamp"
+  outputs = [ stamp ]
+
+  sources = []
+  data = []
+
+  args = [
+    rebase_path(stamp, root_build_dir),
+    "/usr/sbin/paxctl", "+m",
+    "./" + rebase_path(get_label_info(":code_cache_generator_executable", "root_out_dir") + "/code_cache_generator",
+    root_build_dir),
+  ]
+}
+
+executable("code_cache_generator_executable") {
   sources = [ "code_cache_generator.cc" ]
+  output_name = "code_cache_generator"
 
   deps = [
     "//gin:gin",
@@ -25,6 +51,7 @@ executable("code_cache_generator") {
     "//tools/v8_context_snapshot:buildflags",
     "//v8",
   ]
+
   data_deps = []
   data = []
 
