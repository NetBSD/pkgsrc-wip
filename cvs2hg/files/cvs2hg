#!/bin/sh
#
#	$NetBSD$
#
# Copyright (c) 2023 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Thomas Klausner.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
set -e

USAGE="usage: $0 [-f fixup-sql-script] [-m mailmap] source-cvs-rsync-path target-path"
fixup=""
mailmap=""
merge_limit_seconds=""
while getopts f:m:s: f
do
    case $f in
	f)      fixup="-f$OPTARG";;
        m)      mailmap=$OPTARG
		case "$mailmap" in
		    /*);;
		    *) mailmap="../$OPTARG";;
		esac;;
	s)	merge_limit_seconds="-s$OPTARG";;
        \?)     echo "$USAGE" >&2; exit 1;;
    esac
done
shift $((OPTIND - 1))

if [ "$#" != 2 ]
then
	echo "$USAGE" >&2
	exit 1
fi
SRC="$1"
BASE="$2"
cvs2fossil -m $fixup $merge_limit_seconds "$SRC" "$BASE"
# creates "$BASE" and "$BASE".fossil, but we don't need "$BASE"
rm -f "$BASE"
# convert to git
git init "$BASE".git
fossil1 export --git -R "$BASE".fossil | (cd "$BASE".git && git fast-import)
if [ -n "$mailmap" ]
then
	git clone -b trunk "$BASE.git" "$BASE.rewrite.git"
	(cd "$BASE.rewrite.git" && git filter-repo --force --mailmap "$mailmap")
	mv "$BASE.git" "$BASE.git.old"
	mv "$BASE.rewrite.git" "$BASE.git"
fi
# convert to hg
hg --config extensions.hggit= clone "$BASE".git "$BASE".hg
