editors/dte: update dte to version 1.11.1


Changes from 1.11.0 -> 1.11.1:

Additions:
Fixes:
- Fixed a bug that was causing key bindings to not work properly when
  the Num Lock and/or Caps Lock modifiers were in effect in terminals
  supporting the [kitty keyboard protocol].
- Fixed the `save` command, to avoid breaking hard links when writing
  to existing files.
- Fixed an issue in the build system causing `make distcheck` to fail.

Other changes:
- Changed built-in filetype detection so that a `dot_` filename
  prefix isequivalent to a `.` prefix, or more specifically
  `dot_bashrc` is now treated the same way as `.bashrc`.
- Changed the `default` command in `dte-syntax` files to show an error
  if there are duplicate arguments.
- Removed the built-in `xsel` alias.


Changes from 1.10.0 -> 1.11.0:
Additions:
- Added 15 new command flags (see CHANGELOG.md)
- Added a new `exec` command.
- Added `overwrite` and `optimize-true-color` options.
- Added built-in `$RFILE`, `$FILEDIR` and `$COLNO` variables.
- Added `hi`, `msg` and `set` arguments to the `show` command.
- Added a _number_ argument to the `msg` command.
- Added support for 3-digit `#rgb` colors to the `hi` command.
- Added support for binding F13-F20 keys.
- Added support for parsing alternate encodings of F1-F4 keys
  (e.g. `CSI P`) sent by some terminals.
- Added support for the Kitty keyboard protocol.
- Added syntax highlighters for JSON, Go Module (`go.mod`), G-code
  and `.gitignore` files.
- Added support for binary literals and hex float literals to the C
  syntax highlighter.
- Added support for escaped newlines in string literals to the C
  syntax highlighter.
- Added support for `<<-EOF` heredocs to the shell syntax highlighter.
- Added support for template literals to the JavaScript syntax
  highlighter.
- Added support for terminal "synchronized updates" (both the
  DCS-based variant and the private mode `2026` variant).
- Added documentation for the `bookmark` command.
- Added `$PATH`, `$PWD`, `$OLDPWD` and `$DTE_VERSION` to the
  environment section of the `dte` man page.
- Added extended support for Contour and WezTerm terminals.
- Added an AppStream metadata file, which is installed by default when
  running `make install` (except on macOS).

Improvements:
- Updated Unicode support to version 15.
- Allowed `alias` and `errorfmt` entries to be removed, by running
  the commands with only 1 argument.
- Improved command auto-completion various commands.
- Improved documentation for various commands.
- Changed `quit -p quit` to display the number of modified/unsaved
  buffers in the dialog prompt.
- Excluded `.` and `..` from filename auto-completions.
- Allowed `-c <command>` options to be used multiple (up to 8) times.
- Allowed `+lineno,colno` command-line arguments.
- Extended `line` command to accept a `lineno,colno` argument.
- Limited the size of `.editorconfig` files to 32MiB.
- Enabled "enhanced" regex features on macOS, by using the
  `REG_ENHANCED` flag when calling `regcomp(3)`.
- Improved support for the `modifyOtherKeys` keyboard mode, by
  emitting the escape sequence to enable it at startup.
- Various improvements to built-in filetype detection.
- Various performance/efficiency improvements.

Fixes:
- Fixed a bug that caused searches started by `search -r search` to
  be incorrectly recorded by `macro record`.
- Fixed a bug that caused "broken pipe" errors to occur if the
  terminal was resized during certain long-running commands (e.g.
  `compile`).
- Fixed several regular expressions in built-in configs that were
  using non-portable regex features (`\s`, `\b` and `\w`) and causing
  errors on some systems.
- Fixed a portability issue that was causing execution of external
  commands to fail with "function not implemented" errors on some
  systems.

Breaking changes:
- Changed the default Ctrl+v key binding to `paste -a paste`.
- Removed the `display-invisible` global option.
- Removed the `-b` flag from the `select` command.
- Renamed the built-in `coffeescript` filetype to `coffee`.
- Made the `str` command in `dte-syntax` files produce an error if
  used with single-byte arguments (`char` should be used instead).
- The `pipe-from` `-s` flag was effectively renamed to `-n`, as part
  of the made for the new `exec` command.

Other changes:
- Increased the minimum GNU Make version requirement to 4.0.
- Increased the minimum GCC version requirement to 4.8.


Changes from 1.9.1 -> 1.10.0:
Additions:
- Added 7 new commands
- Added 12 new command flags
- Added 2 new global options
- Added an optional *exitcode* argument to the `quit` command.
- Added `color`, `command`, `env`, `errorfmt`, `ft`, `macro`,
  `option`, `search` and `wsplit` arguments to the `show` command.
- Added support for the `\e` escape sequence in double-quoted command
  arguments.
- Added syntax highlighting for Lisp and Scheme files.
- Added an Alt+Enter key binding to search mode, for performing
  plain-text searches.
- Added a Shift+Tab key binding to command mode, for iteratating
  auto-completions in reverse order.
- Added `%b`, `%N` and `%S` statusline format specifiers.
- Added a large confirmation dialog, shown when `quit -p quit` is
  run with unsaved changes.
- Added the ability to exclude individual commands from command
  history.

Improvements:
- Updated Unicode support to version 13.
- Bound Ctrl+c to `copy -k` by default.
- Re-introduced built-in support for rxvt Ctrl/Alt/Shift key
  combinations.
- Fixed the handling of optional capture groups in `errorfmt`
  patterns.
- Improved the legibility of the default color scheme on a wider range
  of terminals.
- Changed the `filter` and `pipe-from` commands to set
  `$LINES`/`$COLUMNS` to the current window height/width, before
  running the specified program.
- Clarified which command flags in the [`dterc`] man page are mutually
  exclusive (by separating them with `|`).
- Fixed signal handling, to allow interrupting unresponsive/deadlocked
  child processes with Ctrl+c.
- Fixed command-line auto-completion to work properly when option
  flags are present.
- Various syntax highlighting improvements.
- Various terminal compatibility improvements.
- Various performance improvements.

Breaking changes:
- Removed support for linking to the system terminfo library. The
  terminfo database has only been used as a last resort source of
  information for several releases now. Most terminals that people
  are likely to be using already have built-in support in the editor,
  including several capabilities not available from terminfo. This is
  listed as a breaking change because it may break support for a few
  archaic hardware terminals (primarily those that aren't ECMA-48
  compatible or whose terminfo strings contain mandatory padding).
- Removed support for vertical tab bars (the `tab-bar` option was
  changed from an enum to a Boolean).
