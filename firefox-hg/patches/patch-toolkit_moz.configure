$NetBSD: patch-toolkit_moz.configure,v 1.10 2018/03/17 00:59:03 ryoon Exp $

* skia part: support bigendian architectures

--- toolkit/moz.configure.orig	2018-03-10 02:54:17.000000000 +0000
+++ toolkit/moz.configure
@@ -414,7 +414,7 @@ option('--enable-eme',
 def enable_eme(value, target):
     # Widevine EME by default enabled on desktop Windows, MacOS and Linux,
     # x86 and x64 builds.
-    if (target.kernel in ('Darwin', 'WINNT', 'Linux') and
+    if (target.kernel in ('Darwin', 'WINNT', 'Linux', 'NetBSD') and
         target.os not in ('Android', 'iOS') and
         target.cpu in ('x86', 'x86_64')):
         return value
@@ -815,8 +815,8 @@ def webrender(value, milestone):
     enable_webrender = None
 
     if value.origin == 'default':
-        # if nothing is specified, default to just building on Nightly
-        build_webrender = milestone.is_nightly
+        # build by default downstream
+        build_webrender = True
     elif len(value) and value[0] == 'build':
         # if explicitly set to 'build', then we build but don't enable
         build_webrender = True
@@ -924,11 +924,11 @@ include('nss.configure')
 # ==============================================================
 option('--disable-skia', help='Disable use of Skia')
 
-@depends('--disable-skia')
-def skia(value):
-    if not value:
-        die('--disable-skia is not supported anymore')
-    else:
+@depends('--disable-skia', target)
+def skia(value, target):
+    if value.origin == 'default' and target.endianness == 'big':
+        return None
+    if value:
         return True
 
 set_config('MOZ_ENABLE_SKIA', skia)
@@ -1051,6 +1051,26 @@ add_old_configure_assignment('FT2_LIBS',
 add_old_configure_assignment('FT2_CFLAGS',
                              ft2_info.cflags)
 
+# Graphite2
+# ==============================================================
+option('--with-system-graphite2',
+       help="Use system graphite2 (located with pkgconfig)")
+
+system_graphite2 = pkg_check_modules('MOZ_GRAPHITE2', 'graphite2',
+                                     when='--with-system-graphite2')
+
+set_config('MOZ_SYSTEM_GRAPHITE2', depends_if(system_graphite2)(lambda _: True))
+
+# HarfBuzz
+# ==============================================================
+option('--with-system-harfbuzz',
+       help="Use system harfbuzz (located with pkgconfig)")
+
+system_harfbuzz = pkg_check_modules('MOZ_HARFBUZZ', 'harfbuzz >= 1.7.4',
+                                    when='--with-system-harfbuzz')
+
+set_config('MOZ_SYSTEM_HARFBUZZ', depends_if(system_harfbuzz)(lambda _: True))
+
 # Mortar
 # ==============================================================
 option('--enable-mortar', help='Enable mortar extension')
