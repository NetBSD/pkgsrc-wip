$NetBSD$

# Respect pkgsrc build flags

--- ext/bifrost/CMakeLists.txt.orig	2024-07-23 11:56:13.172038229 +0000
+++ ext/bifrost/CMakeLists.txt
@@ -6,18 +6,12 @@ find_package(Threads REQUIRED)
 
 # To enable a larger default k-mer size, replace MAX_KMER_SIZE with a larger multiple of 32: actual maximum k-mer size will be MAX_KMER_SIZE-1.
 SET(MAX_GMER_SIZE "${MAX_KMER_SIZE}" CACHE STRING "MAX_GMER_SIZE")
-# Enable architecture optimizations
-SET(COMPILATION_ARCH "native" CACHE STRING "COMPILATION_ARCH")
-# Enable AVX2 instructions
-SET(ENABLE_AVX2 "ON" CACHE STRING "ENABLE_AVX2")
+SET(CMAKE_VERBOSE_MAKEFILE "ON")
 
 # Set some default compile flags
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c11")
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
 
-set_property(SOURCE BlockedBloomFilter.cpp APPEND_STRING PROPERTY COMPILE_FLAGS " -funroll-loops")
-
-
 #check if we are on arm64 and apple, if so, disable AVX2
 if(APPLE AND CMAKE_SYSTEM_PROCESSOR MATCHES "arm")
 	message("Disabling AVX2 instructions on arm64")
@@ -25,20 +19,6 @@ if(APPLE AND CMAKE_SYSTEM_PROCESSOR MATC
 	set(COMPILATION_ARCH "OFF")
 endif(APPLE AND CMAKE_SYSTEM_PROCESSOR MATCHES "arm")
 
-if(COMPILATION_ARCH MATCHES "OFF")
-	message("Disabling native architecture compilation (including AVX2)")
-else(COMPILATION_ARCH MATCHES "OFF")
-	message("Compilation architecture: ${COMPILATION_ARCH}")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=${COMPILATION_ARCH}")
-	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=${COMPILATION_ARCH}")
-endif(COMPILATION_ARCH MATCHES "OFF")
-
-if(ENABLE_AVX2 MATCHES "OFF")
-	message("Disabling AVX2 instructions")
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mno-avx2")
-	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mno-avx2")
-endif(ENABLE_AVX2 MATCHES "OFF")
-
 # Manages build types
 if(NOT CMAKE_BUILD_TYPE)
   set(CMAKE_BUILD_TYPE "Release")
