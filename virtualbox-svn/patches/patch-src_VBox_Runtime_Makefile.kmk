$NetBSD$

--- src/VBox/Runtime/Makefile.kmk.orig	2016-08-15 22:22:06.000000000 +0000
+++ src/VBox/Runtime/Makefile.kmk
@@ -1979,12 +1979,15 @@ RuntimeR0Drv_SDKS.win   = ReorderCompile
 RuntimeR0Drv_DEFS       = IN_RT_R0 RT_WITH_VBOX RT_WITHOUT_NOCRT_WRAPPERS RT_NO_EXPORT_SYMBOL NOFILEID
 RuntimeR0Drv_DEFS.win   = IN_SUP_R0 LDR_ONLY_PE
 RuntimeR0Drv_DEFS.linux = MODULE KBUILD_MODNAME=KBUILD_STR\(vboxdrv\) KBUILD_BASENAME=KBUILD_STR\(vboxdrv\) IN_SUP_R0
+RuntimeR0Drv_DEFS.netbsd = _KERNEL
 
 RuntimeR0Drv_INCS      := $(PATH_SUB_CURRENT) include
 RuntimeR0Drv_INCS.freebsd = \
 	$(PATH_STAGE)/gen-sys-hdrs
 RuntimeR0Drv_INCS.linux = \
 	r0drv/linux
+RuntimeR0Drv_INCS.netbsd = \
+	/usr/src/sys
 RuntimeR0Drv_INCS.solaris = \
 	r0drv/solaris/vbi/i86pc \
 	r0drv/solaris/vbi/i86pc/sys
@@ -2515,6 +2518,17 @@ RuntimeR0Drv_ORDERDEPS.freebsd = \
 	$(PATH_STAGE)/gen-sys-hdrs/bus_if.h \
 	$(PATH_STAGE)/gen-sys-hdrs/device_if.h
 
+RuntimeR0Drv_ORDERDEPS.netbsd = \
+	$(PATH_STAGE)/machine/bus_defs.h \
+	$(PATH_STAGE)/machine/bus_funcs.h \
+	$(PATH_STAGE)/machine/cpufunc.h \
+	$(PATH_STAGE)/machine/pic.h \
+	$(PATH_STAGE)/x86/bus_defs.h \
+	$(PATH_STAGE)/x86/bus_funcs.h \
+	$(PATH_STAGE)/x86/busdefs.h \
+	$(PATH_STAGE)/x86/cpufunc.h \
+	$(PATH_STAGE)/x86/pic.h
+
 
 #
 # RuntimeGuestR0 - Guest driver runtime.
@@ -2831,6 +2845,56 @@ $$(FreeBSDGeneratedKernelHeaders_0_OUTDI
 endif # FreeBSD
 
 
+if "$(KBUILD_TARGET)" == "netbsd"
+# Cherry-pick useful headers and simulate the <machine/*.h> header space
+INSTALLS += NetBSDGeneratedKernelHeadersMachine
+NetBSDGeneratedKernelHeadersMachine_INST = machine/
+NetBSDGeneratedKernelHeadersMachine_SOURCES = \
+	$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/bus_defs.h \
+	$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/bus_funcs.h \
+	$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/cpufunc.h \
+	$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/pic.h
+NetBSDGeneratedKernelHeadersMachine_CLEAN = $(NetBSDGeneratedKernelHeadersMachine_SOURCES)
+
+$$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/bus_defs.h: /usr/src/sys/arch/amd64/include/bus_defs.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/bus_defs.h
+
+$$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/bus_funcs.h: /usr/src/sys/arch/amd64/include/bus_funcs.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/bus_funcs.h
+
+$$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/cpufunc.h: /usr/src/sys/arch/amd64/include/cpufunc.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/cpufunc.h
+
+$$(NetBSDGeneratedKernelHeadersMachine_0_OUTDIR)/pic.h: /usr/src/sys/arch/amd64/include/pic.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/pic.h
+
+# Cherry-pick useful headers and simulate the <x86/*.h> header space
+INSTALLS += NetBSDGeneratedKernelHeadersX86
+NetBSDGeneratedKernelHeadersX86_INST = x86/
+NetBSDGeneratedKernelHeadersX86_SOURCES = \
+	$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/bus_defs.h \
+	$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/bus_funcs.h \
+	$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/busdefs.h \
+	$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/cpufunc.h \
+	$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/pic.h
+NetBSDGeneratedKernelHeadersX86_CLEAN = $(NetBSDGeneratedKernelHeadersX86_SOURCES)
+
+$$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/bus_defs.h: /usr/src/sys/arch/x86/include/bus_defs.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/bus_defs.h
+
+$$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/bus_funcs.h: /usr/src/sys/arch/x86/include/bus_funcs.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/bus_funcs.h
+
+$$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/busdefs.h: /usr/src/sys/arch/x86/include/busdefs.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/busdefs.h
+
+$$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/cpufunc.h: /usr/src/sys/arch/x86/include/cpufunc.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/cpufunc.h
+
+$$(NetBSDGeneratedKernelHeadersX86_0_OUTDIR)/pic.h: /usr/src/sys/arch/x86/include/pic.h | $$(dir $$@)
+	$(QUIET)$(CP) -f $< $(@D)/pic.h
+endif # NetBSD
+
 #
 # Aliases for .cpp.h files so we can more easily do syntax checking from the editor.
 #
@@ -3128,4 +3192,3 @@ taf-template.o taf-template.obj: taf-cor
 tsp-template.o tsp-template.obj: tsp-core.o tsp-asn1-decoder.o tsp-sanity.o tsp-init.o
 x509-template.o x509-template.obj: x509-core.o x509-asn1-decoder.o x509-sanity.o x509-init.o
 pkcs7-template.o pkcs7-template.obj: pkcs7-core.o pkcs7-asn1-decoder.o pkcs7-sanity.o pkcs7-init.o
-
